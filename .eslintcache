[{"C:\\devPleno\\minhas-series\\src\\reportWebVitals.js":"1","C:\\devPleno\\minhas-series\\src\\App.js":"2","C:\\devPleno\\minhas-series\\src\\index.js":"3","C:\\devPleno\\minhas-series\\src\\Header.js":"4","C:\\devPleno\\minhas-series\\src\\Generos.js":"5","C:\\devPleno\\minhas-series\\src\\Home.js":"6","C:\\devPleno\\minhas-series\\src\\NovoGenero.js":"7","C:\\devPleno\\minhas-series\\src\\EditarGenero.js":"8","C:\\devPleno\\minhas-series\\src\\Series.js":"9","C:\\devPleno\\minhas-series\\src\\NovaSerie.js":"10","C:\\devPleno\\minhas-series\\src\\InfoSerie.js":"11"},{"size":362,"mtime":1610974933951,"results":"12","hashOfConfig":"13"},{"size":990,"mtime":1612193366502,"results":"14","hashOfConfig":"13"},{"size":524,"mtime":1611579655626,"results":"15","hashOfConfig":"13"},{"size":995,"mtime":1612008061966,"results":"16","hashOfConfig":"13"},{"size":1998,"mtime":1612187508669,"results":"17","hashOfConfig":"13"},{"size":55,"mtime":1611785052468,"results":"18","hashOfConfig":"13"},{"size":930,"mtime":1611945597397,"results":"19","hashOfConfig":"13"},{"size":1120,"mtime":1611955832998,"results":"20","hashOfConfig":"13"},{"size":1974,"mtime":1612193248264,"results":"21","hashOfConfig":"13"},{"size":1613,"mtime":1612534217221,"results":"22","hashOfConfig":"13"},{"size":5764,"mtime":1612537164337,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1q9fbzv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},"C:\\devPleno\\minhas-series\\src\\reportWebVitals.js",[],["50","51"],"C:\\devPleno\\minhas-series\\src\\App.js",[],["52","53"],"C:\\devPleno\\minhas-series\\src\\index.js",[],["54","55"],"C:\\devPleno\\minhas-series\\src\\Header.js",[],"C:\\devPleno\\minhas-series\\src\\Generos.js",[],"C:\\devPleno\\minhas-series\\src\\Home.js",[],"C:\\devPleno\\minhas-series\\src\\NovoGenero.js",[],"C:\\devPleno\\minhas-series\\src\\EditarGenero.js",[],"C:\\devPleno\\minhas-series\\src\\Series.js",[],"C:\\devPleno\\minhas-series\\src\\NovaSerie.js",["56","57","58","59","60"],"C:\\devPleno\\minhas-series\\src\\InfoSerie.js",["61"],"import {useState, useEffect}  from 'react'\r\nimport axios from 'axios'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Badge} from 'reactstrap'\r\n\r\nfunction InfoSerie({match}) {\r\n\r\n    const[sucess, setSucess] = useState(false)\r\n    const[form, setForm] = useState({\r\n        name : ''\r\n    })\r\n    const[data, setData] = useState({})\r\n    const[mode, setMode] = useState(false)\r\n    const[text, setText] = useState('Editar')\r\n    const[genres, setGenres] = useState([])\r\n    const[genreId, setGenreId] = useState('')\r\n    \r\n    useEffect(()=>{\r\n      if(match.params.id){\r\n        axios.get('/api/series/'+ match.params.id)\r\n        .then(res => {\r\n        setData(res.data)\r\n        setForm(res.data)\r\n         })\r\n        }  \r\n         \r\n    }, [match.params.id])\r\n\r\n    useEffect(()=>{\r\n        axios.get('/api/genres').then(res =>{ setGenres(res.data.data)\r\n        const genres = res.data.data\r\n       const encontrado= genres.find( value=>   data.genre === value.name )  \r\n       \r\n       \r\n       if(encontrado){\r\n           setGenreId(encontrado.id)\r\n       }\r\n        }) \r\n    },[data])\r\n\r\n   function Button(props){\r\n       return(\r\n           <button onClick={props.onClick} className={props.className} >{props.nome}</button>\r\n       )\r\n   }\r\n   \r\n   const Click = () =>{\r\n       setMode(!mode)\r\n       \r\n      \r\n       mode ? setText('Editar') : setText('Cancelar Edição')\r\n  \r\n   }\r\n  //custom header\r\n  const masterHeader = {\r\n     \r\n      height : '50hv',\r\n      minHeight : '500px',\r\n      backgroundImage : `url(${data.background})`,\r\n      backgroundSize : 'cover',\r\n      backgroundPosition : 'center',\r\n      backgroundRepeat : 'no-repeat'\r\n      \r\n  }\r\n    const onChange = field => evt=> {\r\n       setForm({...form, [field] :evt.target.value}) \r\n    }\r\n\r\n    const onChangeGenre = evt =>{\r\n        setGenreId(evt.target.value)\r\n    }\r\n\r\n    \r\n\r\n    const seleciona = (value) => () => {\r\n        setForm({...form, status : value})\r\n  \r\n    }\r\n\r\n    const save = () =>{\r\n        console.log('entrou')\r\n        axios.put('/api/series/' + match.params.id , {\r\n            ...form, genre_id : genreId\r\n        }\r\n        ).then(res => setSucess(true))\r\n    }\r\n\r\n     if(sucess){\r\n       return  <Redirect to='/series'/>\r\n     }\r\n\r\n    \r\n     \r\n  return(\r\n     <div>\r\n       <header style = {masterHeader}>\r\n\r\n            <div className='h-100'  >\r\n\r\n                <div className='h-100 container'>\r\n\r\n                    <div className='row h-100 align-items-center'> \r\n\r\n                        <div className='col-3' style={{marginTop : '50px'}} >\r\n                            <img  alt={data.name} className='img-fluid img-thumbnail ' src={data.poster} alt=\"\"/>\r\n                        </div>\r\n                        <div className='col-8'>\r\n\r\n                           <h1 className='font-weight-light text-white'>{data.name}</h1>\r\n                           <div className='lead text-white'>\r\n\r\n                          { data.status ==='Assistido' && <Badge color='success'>Assistido</Badge> }\r\n                         { data.status ==='Para assistir' &&  <Badge color='warning'>Para Assistir</Badge> }\r\n                            Gênero: {data.genre}\r\n                           </div>\r\n\r\n                        </div>\r\n                    \r\n                    </div>\r\n\r\n                </div>\r\n            </div>  \r\n       \r\n       </header>\r\n       <div>\r\n        <Button onClick={Click} nome ={text} className='btn btn-primary'/>\r\n       </div>\r\n       {mode &&\r\n       \r\n            <div className='container'>\r\n           \r\n                <h1>Editar Série</h1>\r\n             \r\n                <form action=\"\">\r\n\r\n                    <div className='form-group'>\r\n\r\n                        <label htmlFor='name'>Nome</label>\r\n                        <input id='name' value ={form.name} onChange={onChange('name')}  className='form-control' placeholder='Nome da série' />\r\n                      \r\n\r\n                    </div>\r\n                    <div className='form-group'>\r\n\r\n                    <label htmlFor='name'>Comentário</label>\r\n                    <input id='name' value ={form.comments} onChange={onChange('comments')}  className='form-control' placeholder='Comentário sobre a série' />\r\n                  \r\n\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label htmlFor=\"exampleFormControlSelect1\">Gêneros</label>\r\n                    <select className=\"form-control\" onChange={onChangeGenre} defaultValue={genreId}>\r\n                    {genres.map(genre => <option key={genre.id} value={genre.id} >{genre.name}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-check\">\r\n\r\n                        <input className='form-check-input' type='radio' name='status' id='assistido' value='Assistido' onChange={seleciona(('Assistido'))} checked={form.status === 'Assistido'}/>\r\n                        <label className='form-check-label' htmlFor='assistido'>\r\n                            Assistido\r\n                        </label>\r\n\r\n               </div>\r\n                <div className='form-check'>\r\n\r\n                    <input className='form-check-input' type='radio' name='status' id='paraAssistir'  value='Para assistir' onChange={seleciona('Para assistir')} checked={form.status === 'Para assistir'}/>\r\n                    <label className='form-check-label' htmlFor='paraAssistir'>\r\n                        Para assistir\r\n                    </label>\r\n\r\n                </div>\r\n\r\n                <Button type='button'  onClick={save} className='btn btn-primary' nome ='Salvar' />\r\n                </form>\r\n\r\n            </div>\r\n        }\r\n\r\n     </div>\r\n     \r\n  )\r\n}\r\n\r\nexport default InfoSerie\r\n\r\n  \r\n\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"62","replacedBy":"68"},{"ruleId":"64","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":11,"nodeType":"72","messageId":"73","endLine":7,"endColumn":15},{"ruleId":"70","severity":1,"message":"74","line":7,"column":17,"nodeType":"72","messageId":"73","endLine":7,"endColumn":24},{"ruleId":"70","severity":1,"message":"75","line":10,"column":11,"nodeType":"72","messageId":"73","endLine":10,"endColumn":18},{"ruleId":"70","severity":1,"message":"76","line":10,"column":20,"nodeType":"72","messageId":"73","endLine":10,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":42,"column":33,"nodeType":"79","messageId":"80","endLine":42,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":105,"column":106,"nodeType":"83","endLine":105,"endColumn":112},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],["84"],["85"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'setName' is assigned a value but never used.","'genreId' is assigned a value but never used.","'setGenreId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]